{
  "swagger" : "2.0",
  "info" : {
    "description" : "Gives all the details of the medical records api",
    "version" : "1.0.0",
    "title" : "MedicalRecordAPI"
  },
  "host" : "localhost:8080",
  "basePath" : "/api",
  "tags" : [ {
    "name" : "MedicalRecords REST Endpoint"
  } ],
  "schemes" : [ "http", "https" ],
  "paths" : {
    "/records" : {
      "get" : {
        "tags" : [ "MedicalRecords REST Endpoint" ],
        "summary" : "Get all Medical Records.",
        "description" : "",
        "operationId" : "getAllMedicalRecord",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/MedicalRecord"
              }
            }
          },
          "201" : {
            "description" : "All the Medical Records are returned."
          }
        }
      },
      "post" : {
        "tags" : [ "MedicalRecords REST Endpoint" ],
        "summary" : "Create a medical record",
        "description" : "",
        "operationId" : "createMedicalRecord",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "201" : {
            "description" : "The Medical Record is created !"
          },
          "400" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/records/{idRecord}" : {
      "get" : {
        "tags" : [ "MedicalRecords REST Endpoint" ],
        "summary" : "Get a specific Medical Record.",
        "description" : "",
        "operationId" : "getMedicalRecord",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idRecord",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MedicalRecord"
            }
          },
          "201" : {
            "description" : "The Medical Record is returned."
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Medical Record not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "MedicalRecords REST Endpoint" ],
        "summary" : "Delete a Medical Record.",
        "description" : "",
        "operationId" : "deleteMedicalRecord",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idRecord",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "201" : {
            "description" : "The Medical Record is deleted."
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Medical Record not found"
          }
        }
      }
    },
    "/records/{idRecord}/diagnostics" : {
      "get" : {
        "tags" : [ "MedicalRecords REST Endpoint" ],
        "summary" : "Get all Diagnostics associated with a Medical Record.",
        "description" : "",
        "operationId" : "getDiagnostics",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idRecord",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Diagnostic"
              }
            }
          },
          "201" : {
            "description" : "All the Diagnostics are returned."
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Medical Record not found"
          }
        }
      },
      "post" : {
        "tags" : [ "MedicalRecords REST Endpoint" ],
        "summary" : "Create a Diagnostic in the Medical Record associated",
        "description" : "",
        "operationId" : "createDiagnostic",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idRecord",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "201" : {
            "description" : "The Diagnostic is created !"
          },
          "400" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/records/{idRecord}/diagnostics/{idDiagnostic}" : {
      "get" : {
        "tags" : [ "MedicalRecords REST Endpoint" ],
        "summary" : "Get a specific Diagnostic associated with a Medical Record.",
        "description" : "",
        "operationId" : "getDiagnostic",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idRecord",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "idDiagnostic",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Diagnostic"
            }
          },
          "201" : {
            "description" : "The Diagnostic is returned."
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Medical Record or Diagnostic not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "MedicalRecords REST Endpoint" ],
        "summary" : "Delete a Diagnostic.",
        "description" : "",
        "operationId" : "deleteDiagnostic",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idRecord",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "idDiagnostic",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "201" : {
            "description" : "The Diagnostic is deleted."
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Diagnostic not found"
          }
        }
      }
    },
    "/records/{idRecord}/dosages" : {
      "get" : {
        "tags" : [ "MedicalRecords REST Endpoint" ],
        "summary" : "Get all Dosages associated with a Medical Record.",
        "description" : "",
        "operationId" : "getAllDosages",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idRecord",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Dosage"
              }
            }
          },
          "201" : {
            "description" : "All the Dosages are returned."
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Medical Record not found"
          }
        }
      },
      "post" : {
        "tags" : [ "MedicalRecords REST Endpoint" ],
        "summary" : "Create a Dosage in the Medical Record associated",
        "description" : "",
        "operationId" : "createDosage",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idRecord",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "201" : {
            "description" : "The Dosage is created !"
          },
          "400" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/records/{idRecord}/dosages/{idDosage}" : {
      "get" : {
        "tags" : [ "MedicalRecords REST Endpoint" ],
        "summary" : "Get a specific Dosage associated with a Medical Record.",
        "description" : "",
        "operationId" : "getDosage",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idRecord",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "idDosage",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Dosage"
            }
          },
          "201" : {
            "description" : "The Dosage is returned."
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Medical Record or Dosage not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "MedicalRecords REST Endpoint" ],
        "summary" : "Delete a Dosage.",
        "description" : "",
        "operationId" : "deleteDosage",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idRecord",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "idDosage",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "201" : {
            "description" : "The Dosage is deleted."
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Dosage not found"
          }
        }
      }
    },
    "/records/{idRecord}/exams" : {
      "get" : {
        "tags" : [ "MedicalRecords REST Endpoint" ],
        "summary" : "Get all Exams associated with a Medical Record.",
        "description" : "",
        "operationId" : "getExams",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idRecord",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Exam"
              }
            }
          },
          "201" : {
            "description" : "All the Exams are returned."
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Medical Record not found"
          }
        }
      },
      "post" : {
        "tags" : [ "MedicalRecords REST Endpoint" ],
        "summary" : "Create an Exam in the Medical Record associated",
        "description" : "",
        "operationId" : "createExam",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idRecord",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "201" : {
            "description" : "The Exam is created !"
          },
          "400" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/records/{idRecord}/exams/{idExam}" : {
      "get" : {
        "tags" : [ "MedicalRecords REST Endpoint" ],
        "summary" : "Get a specific Exam associated with a Medical Record.",
        "description" : "",
        "operationId" : "getExam",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idRecord",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "idExam",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Exam"
            }
          },
          "201" : {
            "description" : "The Exam is returned."
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Medical Record or Exam not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "MedicalRecords REST Endpoint" ],
        "summary" : "Delete an Exam.",
        "description" : "",
        "operationId" : "deleteExam",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idRecord",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "idExam",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "201" : {
            "description" : "The Exam is deleted."
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Exam not found"
          }
        }
      }
    },
    "/records/{idRecord}/prescriptions" : {
      "get" : {
        "tags" : [ "MedicalRecords REST Endpoint" ],
        "summary" : "Get all Prescriptions associated with a Medical Record.",
        "description" : "",
        "operationId" : "getPrescriptions",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idRecord",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Prescription"
              }
            }
          },
          "201" : {
            "description" : "All the Prescriptions are returned."
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Medical Record not found"
          }
        }
      },
      "post" : {
        "tags" : [ "MedicalRecords REST Endpoint" ],
        "summary" : "Create a Prescription in the Medical Record associated",
        "description" : "",
        "operationId" : "createPrescription",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idRecord",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "201" : {
            "description" : "The Prescription is created !"
          },
          "400" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/records/{idRecord}/prescriptions/{idPrescription}" : {
      "get" : {
        "tags" : [ "MedicalRecords REST Endpoint" ],
        "summary" : "Get a specific Prescription associated with a Medical Record.",
        "description" : "",
        "operationId" : "getPrescription",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idRecord",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "idPrescription",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Prescription"
            }
          },
          "201" : {
            "description" : "The Prescription is returned."
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Medical Record or Prescription not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "MedicalRecords REST Endpoint" ],
        "summary" : "Delete a Prescription.",
        "description" : "",
        "operationId" : "deletePrescription",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idRecord",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "idPrescription",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "201" : {
            "description" : "The Prescription is deleted."
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Prescription not found"
          }
        }
      }
    }
  },
  "definitions" : {
    "Diagnostic" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "title" : {
          "type" : "string"
        },
        "medicalRecord" : {
          "$ref" : "#/definitions/MedicalRecord"
        },
        "consultDiagnostic" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "draft" : {
          "type" : "boolean",
          "default" : false
        },
        "diagnostic" : {
          "$ref" : "#/definitions/Doctor"
        }
      }
    },
    "Doctor" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "type" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "adress" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "phoneNumber" : {
          "type" : "string"
        },
        "specialization" : {
          "type" : "string"
        },
        "node" : {
          "$ref" : "#/definitions/Node"
        },
        "allMedicalRecords" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MedicalRecord"
          }
        }
      }
    },
    "Dosage" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "title" : {
          "type" : "string"
        },
        "doctorConsulting" : {
          "$ref" : "#/definitions/Doctor"
        },
        "medicalRecord" : {
          "$ref" : "#/definitions/MedicalRecord"
        },
        "dateDosage" : {
          "type" : "string"
        },
        "diagnostic" : {
          "$ref" : "#/definitions/Diagnostic"
        },
        "dosagePrescription" : {
          "type" : "string"
        },
        "beginDosage" : {
          "type" : "string"
        },
        "endDosage" : {
          "type" : "string"
        },
        "draft" : {
          "type" : "boolean",
          "default" : false
        },
        "repport" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ReportDosage"
          }
        },
        "lastReport" : {
          "$ref" : "#/definitions/ReportDosage"
        }
      }
    },
    "Exam" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "title" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "dateExam" : {
          "type" : "string"
        },
        "medicalRecord" : {
          "$ref" : "#/definitions/MedicalRecord"
        },
        "draft" : {
          "type" : "boolean",
          "default" : false
        },
        "resultExam" : {
          "$ref" : "#/definitions/ResultExam"
        },
        "doctorAskExamination" : {
          "$ref" : "#/definitions/Doctor"
        }
      }
    },
    "INode" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "type" : {
          "type" : "string"
        },
        "node" : {
          "$ref" : "#/definitions/Node"
        }
      }
    },
    "MedicalRecord" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "ss" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "address" : {
          "type" : "string"
        },
        "birthday" : {
          "type" : "string"
        },
        "gender" : {
          "type" : "string"
        },
        "phoneNumber" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "hu" : {
          "$ref" : "#/definitions/NodeHU"
        }
      }
    },
    "MedicalStaff" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "type" : {
          "type" : "string"
        },
        "idMedicalStaff" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "Node" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "type" : {
          "type" : "string"
        },
        "idNodeInfo" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "NodeAPHP" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "type" : {
          "type" : "string"
        },
        "hospitals" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NodeHospital"
          }
        },
        "attachedNodes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/INode"
          }
        },
        "node" : {
          "$ref" : "#/definitions/Node"
        }
      }
    },
    "NodeCU" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "type" : {
          "type" : "string"
        },
        "specialization" : {
          "type" : "string"
        },
        "hospitalUnit" : {
          "$ref" : "#/definitions/NodeHU"
        },
        "node" : {
          "$ref" : "#/definitions/Node"
        }
      }
    },
    "NodeHU" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "type" : {
          "type" : "string"
        },
        "specialization" : {
          "type" : "string"
        },
        "service" : {
          "$ref" : "#/definitions/NodeService"
        },
        "careUnits" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NodeCU"
          }
        },
        "attachedNodes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/INode"
          }
        },
        "node" : {
          "$ref" : "#/definitions/Node"
        }
      }
    },
    "NodeHospital" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "type" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "aphp" : {
          "$ref" : "#/definitions/NodeAPHP"
        },
        "poles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NodePole"
          }
        },
        "attachedNodes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/INode"
          }
        },
        "node" : {
          "$ref" : "#/definitions/Node"
        }
      }
    },
    "NodePole" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "type" : {
          "type" : "string"
        },
        "specialization" : {
          "type" : "string"
        },
        "hospital" : {
          "$ref" : "#/definitions/NodeHospital"
        },
        "services" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NodeService"
          }
        },
        "attachedNodes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/INode"
          }
        },
        "node" : {
          "$ref" : "#/definitions/Node"
        }
      }
    },
    "NodeService" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "type" : {
          "type" : "string"
        },
        "specialization" : {
          "type" : "string"
        },
        "pole" : {
          "$ref" : "#/definitions/NodePole"
        },
        "hospitalUnits" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NodeHU"
          }
        },
        "attachedNodes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/INode"
          }
        },
        "node" : {
          "$ref" : "#/definitions/Node"
        }
      }
    },
    "Prescription" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "title" : {
          "type" : "string"
        },
        "prescriptor" : {
          "$ref" : "#/definitions/Doctor"
        },
        "medicalRecord" : {
          "$ref" : "#/definitions/MedicalRecord"
        },
        "consultDate" : {
          "type" : "string"
        },
        "diagnostic" : {
          "$ref" : "#/definitions/Diagnostic"
        },
        "prescription" : {
          "type" : "string"
        },
        "draft" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "ReportDosage" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "supervisor" : {
          "$ref" : "#/definitions/MedicalStaff"
        },
        "createDate" : {
          "type" : "string"
        },
        "dosage" : {
          "$ref" : "#/definitions/Dosage"
        },
        "rapport" : {
          "type" : "string"
        }
      }
    },
    "ResultExam" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "examinator" : {
          "$ref" : "#/definitions/Doctor"
        },
        "examDate" : {
          "type" : "string"
        },
        "files" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "result" : {
          "type" : "string"
        }
      }
    }
  }
}